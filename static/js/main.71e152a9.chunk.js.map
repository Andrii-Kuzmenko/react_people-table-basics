{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonTable/PersonTable.tsx","components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","React","memo","person","name","slug","sex","classNames","to","PersonTable","human","born","died","mother","father","motherName","fatherName","PeopleTable","useState","isLoading","setIsLoading","isNotLoaded","setIsNotLoaded","peopleFromServer","setPeopleFromServer","useParams","getUser","people","find","updatePeople","map","loadPeople","useEffect","length","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"2SASO,SAASA,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,iBCZYQ,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTC,EAAaC,IAAMC,MAAY,YAAiB,IAAdC,EAAa,EAAbA,OACrCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAEpB,OACE,cAAC,IAAD,CACEP,UAAWQ,IAAW,CAAE,kBAA2B,MAARD,IAC3CE,GAAE,aAAQH,GAFZ,SAIGD,GAGN,ICVYK,EAAcR,IAAMC,MAAY,YAAuB,IAW9CQ,EAX0BP,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,KAEpDC,EAOEH,EAPFG,IACAK,EAMER,EANFQ,KACAC,EAKET,EALFS,KACAC,EAIEV,EAJFU,OACAC,EAGEX,EAHFW,OACAC,EAEEZ,EAFFY,WACAC,EACEb,EADFa,WAKF,OACE,qBACE,UAAQ,SACRjB,UAAWQ,IAAW,CAAE,0BALRG,EAK6CP,EAL3BO,EAAML,OAASA,KAGnD,UAIE,6BACE,cAACL,EAAD,CAAYG,OAAQA,MAGtB,6BAAKG,IACL,6BAAKK,IACL,6BAAKC,IAEL,6BACGC,EACG,cAACb,EAAD,CAAYG,OAAQU,IACpBE,GAAc,MAGpB,6BACGD,EACG,cAACd,EAAD,CAAYG,OAAQW,IACpBE,GAAc,QAIzB,IC1CYC,EAAchB,IAAMC,MAAK,WACpC,MAAkCgB,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,oBAAkB,GAAxD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgDJ,mBAAmB,IAAnE,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAsBC,cAAdpB,YAAR,MAAe,GAAf,EAEMqB,EAAU,SAACtB,EAAqBuB,GAGpC,OAFkBA,EAAOC,MAAK,SAAAzB,GAAM,OAAIA,EAAOC,OAASA,CAApB,GAGrC,EAEKyB,EAAe,SAACF,GACpB,OAAOA,EAAOG,KAAI,SAAA3B,GAAM,kCACnBA,GADmB,IAEtBU,OAAQa,EAAQvB,EAAOY,WAAYY,GACnCb,OAAQY,EAAQvB,EAAOa,WAAYW,IAHb,GAKzB,EAEKI,EAAU,iDAAG,qGACjBX,GAAa,GADI,kBAIQ/B,IAJR,OAITO,EAJS,OAMf4B,EAAoBK,EAAajC,IANlB,gDAQf0B,GAAe,GARA,yBAUfF,GAAa,GAVE,4EAAH,qDAkBhB,OAJAY,qBAAU,WACRD,GACD,GAAE,IAGD,qCACE,oBAAIhC,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGoB,GAAa,cAAC,EAAD,IAEbE,GAEG,mBAAG,UAAQ,qBAAqBtB,UAAU,kBAA1C,mCAKDwB,EAAiBU,SAAWd,IAAcE,GAEzC,mBAAG,UAAQ,kBAAX,iDAKAE,EAAiBU,SAAWd,GAE5B,wBACE,UAAQ,cACRpB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGwB,EAAiBO,KAAI,SAAA3B,GAAM,OAC1B,cAACM,EAAD,CACEN,OAAQA,EAERE,KAAMA,GADDF,EAAOE,KAHY,gBAc7C,IC3FY6B,EAAgB,kBAC3B,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACRnC,UAAU,iCACVoC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKpC,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGqC,EAAH,EAAGA,SAAH,OAAkB7B,IAC3B,cACA,CAAE,8BAA+B6B,GAFxB,EAIX5B,GAAG,IALL,kBAUA,cAAC,IAAD,CACET,UAAW,gBAAGqC,EAAH,EAAGA,SAAH,OAAkB7B,IAC3B,cACA,CAAE,8BAA+B6B,GAFxB,EAIX5B,GAAG,UALL,2BAaN,sBAAMT,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,KAAK,IAAIC,QAAS,oBAAIvC,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOsC,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU9B,GAAG,IAAI+B,SAAO,MACrD,eAAC,IAAD,CAAOF,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAACrB,EAAD,MACtB,cAAC,IAAD,CAAOoB,KAAK,QAAQC,QAAS,cAACrB,EAAD,SAE/B,cAAC,IAAD,CACEoB,KAAK,IACLC,QAAS,oBAAIvC,UAAU,QAAd,uCA7CQ,ECC7B0C,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.71e152a9.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink = React.memo<Props>(({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n      to={`../${slug}`}\n    >\n      {name}\n    </Link>\n  );\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  slug?: string;\n};\n\nexport const PersonTable = React.memo<Props>(({ person, slug }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    motherName,\n    fatherName,\n  } = person;\n\n  const isSelected = (human: Person) => human.slug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isSelected(person) })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonTable } from '../PersonTable';\n\nexport const PeopleTable = React.memo(() => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [isNotLoaded, setIsNotLoaded] = useState<boolean>(false);\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n\n  const getUser = (name: string | null, people: Person[]) => {\n    const foundUser = people.find(person => person.name === name);\n\n    return foundUser;\n  };\n\n  const updatePeople = (people: Person[]) => {\n    return people.map(person => ({\n      ...person,\n      mother: getUser(person.motherName, people),\n      father: getUser(person.fatherName, people),\n    }));\n  };\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await getPeople();\n\n      setPeopleFromServer(updatePeople(response));\n    } catch {\n      setIsNotLoaded(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isNotLoaded\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {(!peopleFromServer.length && !isLoading && !isNotLoaded)\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          {(!!peopleFromServer.length && !isLoading)\n            && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {peopleFromServer.map(person => (\n                    <PersonTable\n                      person={person}\n                      key={person.slug}\n                      slug={slug}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeopleTable />} />\n            <Route path=\":slug\" element={<PeopleTable />} />\n          </Route>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}